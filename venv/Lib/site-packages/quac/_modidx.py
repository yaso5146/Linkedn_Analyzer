# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/quac',
                'doc_host': 'https://dsm-72.github.io',
                'git_url': 'https://github.com/dsm-72/quac',
                'lib_path': 'quac'},
  'syms': { 'quac.base': { 'quac.base.Duck': ('base.html#duck', 'quac/base.py'),
                           'quac.base.Duck.__init__': ('base.html#duck.__init__', 'quac/base.py'),
                           'quac.base.Duck.__init_subclass__': ('base.html#duck.__init_subclass__', 'quac/base.py'),
                           'quac.base.Duck.__metahook__': ('base.html#duck.__metahook__', 'quac/base.py'),
                           'quac.base.Duck.__new__': ('base.html#duck.__new__', 'quac/base.py'),
                           'quac.base.DuckModule': ('base.html#duckmodule', 'quac/base.py'),
                           'quac.base.GenericDuck': ('base.html#genericduck', 'quac/base.py'),
                           'quac.base.GenericDuck.__init_subclass__': ('base.html#genericduck.__init_subclass__', 'quac/base.py'),
                           'quac.base.GenericDuck.__metahook__': ('base.html#genericduck.__metahook__', 'quac/base.py')},
            'quac.chic': { 'quac.chic.argstype': ('chic.html#argstype', 'quac/chic.py'),
                           'quac.chic.axesidxs': ('chic.html#axesidxs', 'quac/chic.py'),
                           'quac.chic.axesidxsq': ('chic.html#axesidxsq', 'quac/chic.py'),
                           'quac.chic.bbox': ('chic.html#bbox', 'quac/chic.py'),
                           'quac.chic.boolcall': ('chic.html#boolcall', 'quac/chic.py'),
                           'quac.chic.boolcall.__guard__': ('chic.html#boolcall.__guard__', 'quac/chic.py'),
                           'quac.chic.boolcallq': ('chic.html#boolcallq', 'quac/chic.py'),
                           'quac.chic.boolcalls': ('chic.html#boolcalls', 'quac/chic.py'),
                           'quac.chic.color': ('chic.html#color', 'quac/chic.py'),
                           'quac.chic.docgenfn': ('chic.html#docgenfn', 'quac/chic.py'),
                           'quac.chic.imagesize': ('chic.html#imagesize', 'quac/chic.py'),
                           'quac.chic.imagesizeq': ('chic.html#imagesizeq', 'quac/chic.py'),
                           'quac.chic.mixin': ('chic.html#mixin', 'quac/chic.py'),
                           'quac.chic.mixin.__guard__': ('chic.html#mixin.__guard__', 'quac/chic.py'),
                           'quac.chic.rgb': ('chic.html#rgb', 'quac/chic.py'),
                           'quac.chic.rgb.__guard__': ('chic.html#rgb.__guard__', 'quac/chic.py'),
                           'quac.chic.rgba': ('chic.html#rgba', 'quac/chic.py'),
                           'quac.chic.rgba.__guard__': ('chic.html#rgba.__guard__', 'quac/chic.py'),
                           'quac.chic.sysexcinfotype': ('chic.html#sysexcinfotype', 'quac/chic.py'),
                           'quac.chic.sysformatstyle': ('chic.html#sysformatstyle', 'quac/chic.py'),
                           'quac.chic.videosize': ('chic.html#videosize', 'quac/chic.py'),
                           'quac.chic.videosizeq': ('chic.html#videosizeq', 'quac/chic.py')},
            'quac.cons': {},
            'quac.duck': { 'quac.duck._mpl_axes': ('duck.html#_mpl_axes', 'quac/duck.py'),
                           'quac.duck._mpl_base': ('duck.html#_mpl_base', 'quac/duck.py'),
                           'quac.duck.adata': ('duck.html#adata', 'quac/duck.py'),
                           'quac.duck.adatas': ('duck.html#adatas', 'quac/duck.py'),
                           'quac.duck.annreturn': ('duck.html#annreturn', 'quac/duck.py'),
                           'quac.duck.annreturn.__guard__': ('duck.html#annreturn.__guard__', 'quac/duck.py'),
                           'quac.duck.annreturn.__metahook__': ('duck.html#annreturn.__metahook__', 'quac/duck.py'),
                           'quac.duck.anyq': ('duck.html#anyq', 'quac/duck.py'),
                           'quac.duck.array': ('duck.html#array', 'quac/duck.py'),
                           'quac.duck.arrayq': ('duck.html#arrayq', 'quac/duck.py'),
                           'quac.duck.artist': ('duck.html#artist', 'quac/duck.py'),
                           'quac.duck.augmenter': ('duck.html#augmenter', 'quac/duck.py'),
                           'quac.duck.bool01': ('duck.html#bool01', 'quac/duck.py'),
                           'quac.duck.boolic': ('duck.html#boolic', 'quac/duck.py'),
                           'quac.duck.boolindex': ('duck.html#boolindex', 'quac/duck.py'),
                           'quac.duck.boolindexq': ('duck.html#boolindexq', 'quac/duck.py'),
                           'quac.duck.boolq': ('duck.html#boolq', 'quac/duck.py'),
                           'quac.duck.bools': ('duck.html#bools', 'quac/duck.py'),
                           'quac.duck.booltensor': ('duck.html#booltensor', 'quac/duck.py'),
                           'quac.duck.booltensorq': ('duck.html#booltensorq', 'quac/duck.py'),
                           'quac.duck.brownianintervial': ('duck.html#brownianintervial', 'quac/duck.py'),
                           'quac.duck.bsrarray': ('duck.html#bsrarray', 'quac/duck.py'),
                           'quac.duck.bsrmatrix': ('duck.html#bsrmatrix', 'quac/duck.py'),
                           'quac.duck.builtinfunctype': ('duck.html#builtinfunctype', 'quac/duck.py'),
                           'quac.duck.callq': ('duck.html#callq', 'quac/duck.py'),
                           'quac.duck.catindex': ('duck.html#catindex', 'quac/duck.py'),
                           'quac.duck.catindexq': ('duck.html#catindexq', 'quac/duck.py'),
                           'quac.duck.colormap': ('duck.html#colormap', 'quac/duck.py'),
                           'quac.duck.cooarray': ('duck.html#cooarray', 'quac/duck.py'),
                           'quac.duck.coomatrix': ('duck.html#coomatrix', 'quac/duck.py'),
                           'quac.duck.cscarray': ('duck.html#cscarray', 'quac/duck.py'),
                           'quac.duck.cscmatrix': ('duck.html#cscmatrix', 'quac/duck.py'),
                           'quac.duck.csrarray': ('duck.html#csrarray', 'quac/duck.py'),
                           'quac.duck.csrmatrix': ('duck.html#csrmatrix', 'quac/duck.py'),
                           'quac.duck.cv2vidcap': ('duck.html#cv2vidcap', 'quac/duck.py'),
                           'quac.duck.dataframe': ('duck.html#dataframe', 'quac/duck.py'),
                           'quac.duck.dataloader': ('duck.html#dataloader', 'quac/duck.py'),
                           'quac.duck.datamodule': ('duck.html#datamodule', 'quac/duck.py'),
                           'quac.duck.dataset': ('duck.html#dataset', 'quac/duck.py'),
                           'quac.duck.datasource': ('duck.html#datasource', 'quac/duck.py'),
                           'quac.duck.datatype': ('duck.html#datatype', 'quac/duck.py'),
                           'quac.duck.devcpu': ('duck.html#devcpu', 'quac/duck.py'),
                           'quac.duck.devcuda': ('duck.html#devcuda', 'quac/duck.py'),
                           'quac.duck.device': ('duck.html#device', 'quac/duck.py'),
                           'quac.duck.device.__metahook__': ('duck.html#device.__metahook__', 'quac/duck.py'),
                           'quac.duck.deviceq': ('duck.html#deviceq', 'quac/duck.py'),
                           'quac.duck.deviceq.__generate__': ('duck.html#deviceq.__generate__', 'quac/duck.py'),
                           'quac.duck.devmps': ('duck.html#devmps', 'quac/duck.py'),
                           'quac.duck.diaarray': ('duck.html#diaarray', 'quac/duck.py'),
                           'quac.duck.diamatrix': ('duck.html#diamatrix', 'quac/duck.py'),
                           'quac.duck.dictitems': ('duck.html#dictitems', 'quac/duck.py'),
                           'quac.duck.dictkeys': ('duck.html#dictkeys', 'quac/duck.py'),
                           'quac.duck.dictq': ('duck.html#dictq', 'quac/duck.py'),
                           'quac.duck.dictvalues': ('duck.html#dictvalues', 'quac/duck.py'),
                           'quac.duck.dim1': ('duck.html#dim1', 'quac/duck.py'),
                           'quac.duck.dim2': ('duck.html#dim2', 'quac/duck.py'),
                           'quac.duck.dim3': ('duck.html#dim3', 'quac/duck.py'),
                           'quac.duck.dim4': ('duck.html#dim4', 'quac/duck.py'),
                           'quac.duck.dimmed': ('duck.html#dimmed', 'quac/duck.py'),
                           'quac.duck.dokarray': ('duck.html#dokarray', 'quac/duck.py'),
                           'quac.duck.dokmatrix': ('duck.html#dokmatrix', 'quac/duck.py'),
                           'quac.duck.doubletensor': ('duck.html#doubletensor', 'quac/duck.py'),
                           'quac.duck.doubletensorq': ('duck.html#doubletensorq', 'quac/duck.py'),
                           'quac.duck.dtype': ('duck.html#dtype', 'quac/duck.py'),
                           'quac.duck.dtypeq': ('duck.html#dtypeq', 'quac/duck.py'),
                           'quac.duck.enumauto': ('duck.html#enumauto', 'quac/duck.py'),
                           'quac.duck.enumdict': ('duck.html#enumdict', 'quac/duck.py'),
                           'quac.duck.floatq': ('duck.html#floatq', 'quac/duck.py'),
                           'quac.duck.floats': ('duck.html#floats', 'quac/duck.py'),
                           'quac.duck.floattensor': ('duck.html#floattensor', 'quac/duck.py'),
                           'quac.duck.floattensorq': ('duck.html#floattensorq', 'quac/duck.py'),
                           'quac.duck.functiontype': ('duck.html#functiontype', 'quac/duck.py'),
                           'quac.duck.genset': ('duck.html#genset', 'quac/duck.py'),
                           'quac.duck.graphtype': ('duck.html#graphtype', 'quac/duck.py'),
                           'quac.duck.groupkey': ('duck.html#groupkey', 'quac/duck.py'),
                           'quac.duck.ichain': ('duck.html#ichain', 'quac/duck.py'),
                           'quac.duck.image': ('duck.html#image', 'quac/duck.py'),
                           'quac.duck.indexlike': ('duck.html#indexlike', 'quac/duck.py'),
                           'quac.duck.indextype': ('duck.html#indextype', 'quac/duck.py'),
                           'quac.duck.int2': ('duck.html#int2', 'quac/duck.py'),
                           'quac.duck.int3': ('duck.html#int3', 'quac/duck.py'),
                           'quac.duck.int4': ('duck.html#int4', 'quac/duck.py'),
                           'quac.duck.intq': ('duck.html#intq', 'quac/duck.py'),
                           'quac.duck.ints': ('duck.html#ints', 'quac/duck.py'),
                           'quac.duck.inttensor': ('duck.html#inttensor', 'quac/duck.py'),
                           'quac.duck.inttensorq': ('duck.html#inttensorq', 'quac/duck.py'),
                           'quac.duck.iprod': ('duck.html#iprod', 'quac/duck.py'),
                           'quac.duck.iterable': ('duck.html#iterable', 'quac/duck.py'),
                           'quac.duck.iterlike': ('duck.html#iterlike', 'quac/duck.py'),
                           'quac.duck.iterq': ('duck.html#iterq', 'quac/duck.py'),
                           'quac.duck.itertype': ('duck.html#itertype', 'quac/duck.py'),
                           'quac.duck.kvdict': ('duck.html#kvdict', 'quac/duck.py'),
                           'quac.duck.kvdict.__metahook__': ('duck.html#kvdict.__metahook__', 'quac/duck.py'),
                           'quac.duck.lcolormap': ('duck.html#lcolormap', 'quac/duck.py'),
                           'quac.duck.len1': ('duck.html#len1', 'quac/duck.py'),
                           'quac.duck.len2': ('duck.html#len2', 'quac/duck.py'),
                           'quac.duck.len3': ('duck.html#len3', 'quac/duck.py'),
                           'quac.duck.len4': ('duck.html#len4', 'quac/duck.py'),
                           'quac.duck.lilarray': ('duck.html#lilarray', 'quac/duck.py'),
                           'quac.duck.lilmatrix': ('duck.html#lilmatrix', 'quac/duck.py'),
                           'quac.duck.listq': ('duck.html#listq', 'quac/duck.py'),
                           'quac.duck.literal': ('duck.html#literal', 'quac/duck.py'),
                           'quac.duck.literal.__metahook__': ('duck.html#literal.__metahook__', 'quac/duck.py'),
                           'quac.duck.logger': ('duck.html#logger', 'quac/duck.py'),
                           'quac.duck.loggerq': ('duck.html#loggerq', 'quac/duck.py'),
                           'quac.duck.longtensor': ('duck.html#longtensor', 'quac/duck.py'),
                           'quac.duck.longtensorq': ('duck.html#longtensorq', 'quac/duck.py'),
                           'quac.duck.lscolormap': ('duck.html#lscolormap', 'quac/duck.py'),
                           'quac.duck.mapping': ('duck.html#mapping', 'quac/duck.py'),
                           'quac.duck.matrix': ('duck.html#matrix', 'quac/duck.py'),
                           'quac.duck.matrixq': ('duck.html#matrixq', 'quac/duck.py'),
                           'quac.duck.memfmt': ('duck.html#memfmt', 'quac/duck.py'),
                           'quac.duck.moduleloader': ('duck.html#moduleloader', 'quac/duck.py'),
                           'quac.duck.moduleq': ('duck.html#moduleq', 'quac/duck.py'),
                           'quac.duck.modulespec': ('duck.html#modulespec', 'quac/duck.py'),
                           'quac.duck.moduletype': ('duck.html#moduletype', 'quac/duck.py'),
                           'quac.duck.mplaxbase': ('duck.html#mplaxbase', 'quac/duck.py'),
                           'quac.duck.mplaxes': ('duck.html#mplaxes', 'quac/duck.py'),
                           'quac.duck.mplpatch': ('duck.html#mplpatch', 'quac/duck.py'),
                           'quac.duck.na': ('duck.html#na', 'quac/duck.py'),
                           'quac.duck.nan': ('duck.html#nan', 'quac/duck.py'),
                           'quac.duck.nanq': ('duck.html#nanq', 'quac/duck.py'),
                           'quac.duck.nans': ('duck.html#nans', 'quac/duck.py'),
                           'quac.duck.nantensor': ('duck.html#nantensor', 'quac/duck.py'),
                           'quac.duck.nantensorq': ('duck.html#nantensorq', 'quac/duck.py'),
                           'quac.duck.neuraldynamics': ('duck.html#neuraldynamics', 'quac/duck.py'),
                           'quac.duck.neuralode': ('duck.html#neuralode', 'quac/duck.py'),
                           'quac.duck.neuralsde': ('duck.html#neuralsde', 'quac/duck.py'),
                           'quac.duck.nfloat': ('duck.html#nfloat', 'quac/duck.py'),
                           'quac.duck.nfloat.__metahook__': ('duck.html#nfloat.__metahook__', 'quac/duck.py'),
                           'quac.duck.nilstr': ('duck.html#nilstr', 'quac/duck.py'),
                           'quac.duck.nint': ('duck.html#nint', 'quac/duck.py'),
                           'quac.duck.nint.__metahook__': ('duck.html#nint.__metahook__', 'quac/duck.py'),
                           'quac.duck.nlen': ('duck.html#nlen', 'quac/duck.py'),
                           'quac.duck.nlen.__metahook__': ('duck.html#nlen.__metahook__', 'quac/duck.py'),
                           'quac.duck.nnmodule': ('duck.html#nnmodule', 'quac/duck.py'),
                           'quac.duck.nnum': ('duck.html#nnum', 'quac/duck.py'),
                           'quac.duck.nnum.__metahook__': ('duck.html#nnum.__metahook__', 'quac/duck.py'),
                           'quac.duck.none': ('duck.html#none', 'quac/duck.py'),
                           'quac.duck.notiterstr': ('duck.html#notiterstr', 'quac/duck.py'),
                           'quac.duck.notiterstr.__guard__': ('duck.html#notiterstr.__guard__', 'quac/duck.py'),
                           'quac.duck.notnilstr': ('duck.html#notnilstr', 'quac/duck.py'),
                           'quac.duck.notnone': ('duck.html#notnone', 'quac/duck.py'),
                           'quac.duck.notstrbytes': ('duck.html#notstrbytes', 'quac/duck.py'),
                           'quac.duck.notstriter': ('duck.html#notstriter', 'quac/duck.py'),
                           'quac.duck.nparray': ('duck.html#nparray', 'quac/duck.py'),
                           'quac.duck.npbool': ('duck.html#npbool', 'quac/duck.py'),
                           'quac.duck.npdatasource': ('duck.html#npdatasource', 'quac/duck.py'),
                           'quac.duck.npempty': ('duck.html#npempty', 'quac/duck.py'),
                           'quac.duck.npmatrix': ('duck.html#npmatrix', 'quac/duck.py'),
                           'quac.duck.npnan': ('duck.html#npnan', 'quac/duck.py'),
                           'quac.duck.num': ('duck.html#num', 'quac/duck.py'),
                           'quac.duck.numq': ('duck.html#numq', 'quac/duck.py'),
                           'quac.duck.nums': ('duck.html#nums', 'quac/duck.py'),
                           'quac.duck.numstr': ('duck.html#numstr', 'quac/duck.py'),
                           'quac.duck.numstrq': ('duck.html#numstrq', 'quac/duck.py'),
                           'quac.duck.odefunc': ('duck.html#odefunc', 'quac/duck.py'),
                           'quac.duck.ospathlike': ('duck.html#ospathlike', 'quac/duck.py'),
                           'quac.duck.param': ('duck.html#param', 'quac/duck.py'),
                           'quac.duck.paramkind': ('duck.html#paramkind', 'quac/duck.py'),
                           'quac.duck.pathlike': ('duck.html#pathlike', 'quac/duck.py'),
                           'quac.duck.pathq': ('duck.html#pathq', 'quac/duck.py'),
                           'quac.duck.paths': ('duck.html#paths', 'quac/duck.py'),
                           'quac.duck.pattern': ('duck.html#pattern', 'quac/duck.py'),
                           'quac.duck.patternq': ('duck.html#patternq', 'quac/duck.py'),
                           'quac.duck.pdcataccessor': ('duck.html#pdcataccessor', 'quac/duck.py'),
                           'quac.duck.pdcatindex': ('duck.html#pdcatindex', 'quac/duck.py'),
                           'quac.duck.pddataframe': ('duck.html#pddataframe', 'quac/duck.py'),
                           'quac.duck.pddelegate': ('duck.html#pddelegate', 'quac/duck.py'),
                           'quac.duck.pdindex': ('duck.html#pdindex', 'quac/duck.py'),
                           'quac.duck.pdna': ('duck.html#pdna', 'quac/duck.py'),
                           'quac.duck.pdseries': ('duck.html#pdseries', 'quac/duck.py'),
                           'quac.duck.pilimage': ('duck.html#pilimage', 'quac/duck.py'),
                           'quac.duck.pldatamodule': ('duck.html#pldatamodule', 'quac/duck.py'),
                           'quac.duck.plibpath': ('duck.html#plibpath', 'quac/duck.py'),
                           'quac.duck.plmodule': ('duck.html#plmodule', 'quac/duck.py'),
                           'quac.duck.posixpath': ('duck.html#posixpath', 'quac/duck.py'),
                           'quac.duck.presfmt': ('duck.html#presfmt', 'quac/duck.py'),
                           'quac.duck.ptdataloader': ('duck.html#ptdataloader', 'quac/duck.py'),
                           'quac.duck.ptdataset': ('duck.html#ptdataset', 'quac/duck.py'),
                           'quac.duck.ptdevice': ('duck.html#ptdevice', 'quac/duck.py'),
                           'quac.duck.ptdeviceq': ('duck.html#ptdeviceq', 'quac/duck.py'),
                           'quac.duck.ptmodule': ('duck.html#ptmodule', 'quac/duck.py'),
                           'quac.duck.ptsize': ('duck.html#ptsize', 'quac/duck.py'),
                           'quac.duck.ptsizeq': ('duck.html#ptsizeq', 'quac/duck.py'),
                           'quac.duck.pttensor': ('duck.html#pttensor', 'quac/duck.py'),
                           'quac.duck.pttensorq': ('duck.html#pttensorq', 'quac/duck.py'),
                           'quac.duck.pttndict': ('duck.html#pttndict', 'quac/duck.py'),
                           'quac.duck.pttype': ('duck.html#pttype', 'quac/duck.py'),
                           'quac.duck.pttypeq': ('duck.html#pttypeq', 'quac/duck.py'),
                           'quac.duck.pynan': ('duck.html#pynan', 'quac/duck.py'),
                           'quac.duck.real': ('duck.html#real', 'quac/duck.py'),
                           'quac.duck.realq': ('duck.html#realq', 'quac/duck.py'),
                           'quac.duck.reals': ('duck.html#reals', 'quac/duck.py'),
                           'quac.duck.recarray': ('duck.html#recarray', 'quac/duck.py'),
                           'quac.duck.rematch': ('duck.html#rematch', 'quac/duck.py'),
                           'quac.duck.richcons': ('duck.html#richcons', 'quac/duck.py'),
                           'quac.duck.richprog': ('duck.html#richprog', 'quac/duck.py'),
                           'quac.duck.richtask': ('duck.html#richtask', 'quac/duck.py'),
                           'quac.duck.richtext': ('duck.html#richtext', 'quac/duck.py'),
                           'quac.duck.richtree': ('duck.html#richtree', 'quac/duck.py'),
                           'quac.duck.sdefunc': ('duck.html#sdefunc', 'quac/duck.py'),
                           'quac.duck.sdeito': ('duck.html#sdeito', 'quac/duck.py'),
                           'quac.duck.serieslike': ('duck.html#serieslike', 'quac/duck.py'),
                           'quac.duck.seriestype': ('duck.html#seriestype', 'quac/duck.py'),
                           'quac.duck.setnum': ('duck.html#setnum', 'quac/duck.py'),
                           'quac.duck.setq': ('duck.html#setq', 'quac/duck.py'),
                           'quac.duck.setstr': ('duck.html#setstr', 'quac/duck.py'),
                           'quac.duck.shaped': ('duck.html#shaped', 'quac/duck.py'),
                           'quac.duck.sig': ('duck.html#sig', 'quac/duck.py'),
                           'quac.duck.size': ('duck.html#size', 'quac/duck.py'),
                           'quac.duck.sizeq': ('duck.html#sizeq', 'quac/duck.py'),
                           'quac.duck.slicelike': ('duck.html#slicelike', 'quac/duck.py'),
                           'quac.duck.slicespec': ('duck.html#slicespec', 'quac/duck.py'),
                           'quac.duck.slicespecs': ('duck.html#slicespecs', 'quac/duck.py'),
                           'quac.duck.sparray': ('duck.html#sparray', 'quac/duck.py'),
                           'quac.duck.sparse': ('duck.html#sparse', 'quac/duck.py'),
                           'quac.duck.sparsearray': ('duck.html#sparsearray', 'quac/duck.py'),
                           'quac.duck.sparsematrix': ('duck.html#sparsematrix', 'quac/duck.py'),
                           'quac.duck.sparseq': ('duck.html#sparseq', 'quac/duck.py'),
                           'quac.duck.spmatrix': ('duck.html#spmatrix', 'quac/duck.py'),
                           'quac.duck.strbytes': ('duck.html#strbytes', 'quac/duck.py'),
                           'quac.duck.strq': ('duck.html#strq', 'quac/duck.py'),
                           'quac.duck.strs': ('duck.html#strs', 'quac/duck.py'),
                           'quac.duck.strtmpl': ('duck.html#strtmpl', 'quac/duck.py'),
                           'quac.duck.tensor': ('duck.html#tensor', 'quac/duck.py'),
                           'quac.duck.tensorq': ('duck.html#tensorq', 'quac/duck.py'),
                           'quac.duck.tqdmauto': ('duck.html#tqdmauto', 'quac/duck.py'),
                           'quac.duck.trackbacktype': ('duck.html#trackbacktype', 'quac/duck.py'),
                           'quac.duck.tupleq': ('duck.html#tupleq', 'quac/duck.py'),
                           'quac.duck.typerapp': ('duck.html#typerapp', 'quac/duck.py'),
                           'quac.duck.vidcap': ('duck.html#vidcap', 'quac/duck.py'),
                           'quac.duck.walkparts': ('duck.html#walkparts', 'quac/duck.py'),
                           'quac.duck.walktuple': ('duck.html#walktuple', 'quac/duck.py'),
                           'quac.duck.walktuple.__guard__': ('duck.html#walktuple.__guard__', 'quac/duck.py'),
                           'quac.duck.wrappertype': ('duck.html#wrappertype', 'quac/duck.py'),
                           'quac.duck.ziplong': ('duck.html#ziplong', 'quac/duck.py')},
            'quac.eggs': {},
            'quac.enum': { 'quac.enum.LoaderState': ('enum.html#loaderstate', 'quac/enum.py'),
                           'quac.enum.LoaderState._missing_': ('enum.html#loaderstate._missing_', 'quac/enum.py'),
                           'quac.enum.LoaderState.exec': ('enum.html#loaderstate.exec', 'quac/enum.py'),
                           'quac.enum.LoaderState.get': ('enum.html#loaderstate.get', 'quac/enum.py'),
                           'quac.enum.LoaderState.set': ('enum.html#loaderstate.set', 'quac/enum.py'),
                           'quac.enum.LoaderState.spec': ('enum.html#loaderstate.spec', 'quac/enum.py'),
                           'quac.enum.Species': ('enum.html#species', 'quac/enum.py'),
                           'quac.enum.Species.contains': ('enum.html#species.contains', 'quac/enum.py'),
                           'quac.enum.init_enum': ('enum.html#init_enum', 'quac/enum.py')},
            'quac.errs': { 'quac.errs.DuckAttributeError': ('errs.html#duckattributeerror', 'quac/errs.py'),
                           'quac.errs.DuckException': ('errs.html#duckexception', 'quac/errs.py'),
                           'quac.errs.DuckImportError': ('errs.html#duckimporterror', 'quac/errs.py'),
                           'quac.errs.DuckModuleNotFoundError': ('errs.html#duckmodulenotfounderror', 'quac/errs.py'),
                           'quac.errs.DuckNameError': ('errs.html#ducknameerror', 'quac/errs.py')},
            'quac.grds': { 'quac.grds.NotStrBytesIterable': ('grds.html#notstrbytesiterable', 'quac/grds.py'),
                           'quac.grds.NotStrBytesIterableMeta': ('grds.html#notstrbytesiterablemeta', 'quac/grds.py'),
                           'quac.grds.NotStrBytesIterableMeta.__instancecheck__': ( 'grds.html#notstrbytesiterablemeta.__instancecheck__',
                                                                                    'quac/grds.py'),
                           'quac.grds._isdev': ('grds.html#_isdev', 'quac/grds.py'),
                           'quac.grds._isdevname': ('grds.html#_isdevname', 'quac/grds.py'),
                           'quac.grds._iskvdict': ('grds.html#_iskvdict', 'quac/grds.py'),
                           'quac.grds._islen': ('grds.html#_islen', 'quac/grds.py'),
                           'quac.grds._istkey': ('grds.html#_istkey', 'quac/grds.py'),
                           'quac.grds._istval': ('grds.html#_istval', 'quac/grds.py'),
                           'quac.grds.allnotspecial': ('grds.html#allnotspecial', 'quac/grds.py'),
                           'quac.grds.getnotspecials': ('grds.html#getnotspecials', 'quac/grds.py'),
                           'quac.grds.hasduck': ('grds.html#hasduck', 'quac/grds.py'),
                           'quac.grds.hasducktype': ('grds.html#hasducktype', 'quac/grds.py'),
                           'quac.grds.hashash': ('grds.html#hashash', 'quac/grds.py'),
                           'quac.grds.hasload': ('grds.html#hasload', 'quac/grds.py'),
                           'quac.grds.hasorigin': ('grds.html#hasorigin', 'quac/grds.py'),
                           'quac.grds.is_type': ('grds.html#is_type', 'quac/grds.py'),
                           'quac.grds.isalias': ('grds.html#isalias', 'quac/grds.py'),
                           'quac.grds.isallsame': ('grds.html#isallsame', 'quac/grds.py'),
                           'quac.grds.isargs': ('grds.html#isargs', 'quac/grds.py'),
                           'quac.grds.isbool': ('grds.html#isbool', 'quac/grds.py'),
                           'quac.grds.iscls': ('grds.html#iscls', 'quac/grds.py'),
                           'quac.grds.isclstype': ('grds.html#isclstype', 'quac/grds.py'),
                           'quac.grds.isdict': ('grds.html#isdict', 'quac/grds.py'),
                           'quac.grds.isduck': ('grds.html#isduck', 'quac/grds.py'),
                           'quac.grds.isduckmodule': ('grds.html#isduckmodule', 'quac/grds.py'),
                           'quac.grds.isduckspec': ('grds.html#isduckspec', 'quac/grds.py'),
                           'quac.grds.isenum': ('grds.html#isenum', 'quac/grds.py'),
                           'quac.grds.ishashable': ('grds.html#ishashable', 'quac/grds.py'),
                           'quac.grds.isiter': ('grds.html#isiter', 'quac/grds.py'),
                           'quac.grds.isnan': ('grds.html#isnan', 'quac/grds.py'),
                           'quac.grds.isnone': ('grds.html#isnone', 'quac/grds.py'),
                           'quac.grds.isnotiterstr': ('grds.html#isnotiterstr', 'quac/grds.py'),
                           'quac.grds.isnotspecial': ('grds.html#isnotspecial', 'quac/grds.py'),
                           'quac.grds.isoptional': ('grds.html#isoptional', 'quac/grds.py'),
                           'quac.grds.isorigin': ('grds.html#isorigin', 'quac/grds.py'),
                           'quac.grds.isspecial': ('grds.html#isspecial', 'quac/grds.py'),
                           'quac.grds.isstr': ('grds.html#isstr', 'quac/grds.py'),
                           'quac.grds.istuple': ('grds.html#istuple', 'quac/grds.py'),
                           'quac.grds.istype': ('grds.html#istype', 'quac/grds.py'),
                           'quac.grds.istyping': ('grds.html#istyping', 'quac/grds.py'),
                           'quac.grds.notcls': ('grds.html#notcls', 'quac/grds.py'),
                           'quac.grds.notnone': ('grds.html#notnone', 'quac/grds.py'),
                           'quac.grds.notspecialsorigins': ('grds.html#notspecialsorigins', 'quac/grds.py')},
            'quac.meta': { 'quac.meta.ABCDuck': ('meta.html#abcduck', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__alias__': ('meta.html#abcduck.__alias__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__call__': ('meta.html#abcduck.__call__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__contains__': ('meta.html#abcduck.__contains__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__eq__': ('meta.html#abcduck.__eq__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__guard__': ('meta.html#abcduck.__guard__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__guardq__': ('meta.html#abcduck.__guardq__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__hash__': ('meta.html#abcduck.__hash__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__init__': ('meta.html#abcduck.__init__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__init_subclass__': ('meta.html#abcduck.__init_subclass__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__initiate__': ('meta.html#abcduck.__initiate__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__instancecheck__': ('meta.html#abcduck.__instancecheck__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__invert__': ('meta.html#abcduck.__invert__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__makecopy__': ('meta.html#abcduck.__makecopy__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__makeduck__': ('meta.html#abcduck.__makeduck__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__makefunc__': ('meta.html#abcduck.__makefunc__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__makeiter__': ('meta.html#abcduck.__makeiter__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__makespec__': ('meta.html#abcduck.__makespec__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__makesupr__': ('meta.html#abcduck.__makesupr__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__maketype__': ('meta.html#abcduck.__maketype__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__membercheck__': ('meta.html#abcduck.__membercheck__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__memberguard__': ('meta.html#abcduck.__memberguard__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__metahook__': ('meta.html#abcduck.__metahook__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__new__': ('meta.html#abcduck.__new__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__notinstance__': ('meta.html#abcduck.__notinstance__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__optinstance__': ('meta.html#abcduck.__optinstance__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__repr__': ('meta.html#abcduck.__repr__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__subclasscheck__': ('meta.html#abcduck.__subclasscheck__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__types__': ('meta.html#abcduck.__types__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__typesq__': ('meta.html#abcduck.__typesq__', 'quac/meta.py'),
                           'quac.meta.ABCDuck.__usetypes__': ('meta.html#abcduck.__usetypes__', 'quac/meta.py'),
                           'quac.meta.ABCSpecies': ('meta.html#abcspecies', 'quac/meta.py'),
                           'quac.meta.ABCSpecies.__hash__': ('meta.html#abcspecies.__hash__', 'quac/meta.py'),
                           'quac.meta.ABCSpecies.__migrate__': ('meta.html#abcspecies.__migrate__', 'quac/meta.py'),
                           'quac.meta.ABCSpecies.__not__': ('meta.html#abcspecies.__not__', 'quac/meta.py'),
                           'quac.meta.ABCSpecies.__opt__': ('meta.html#abcspecies.__opt__', 'quac/meta.py'),
                           'quac.meta.ABCSpecies.__reg__': ('meta.html#abcspecies.__reg__', 'quac/meta.py'),
                           'quac.meta.DuckModuleMeta': ('meta.html#duckmodulemeta', 'quac/meta.py'),
                           'quac.meta.DuckModuleMeta.__getattr__': ('meta.html#duckmodulemeta.__getattr__', 'quac/meta.py'),
                           'quac.meta.DuckModuleMeta.__hash__': ('meta.html#duckmodulemeta.__hash__', 'quac/meta.py'),
                           'quac.meta.DuckModuleMeta.__instancecheck__': ('meta.html#duckmodulemeta.__instancecheck__', 'quac/meta.py')},
            'quac.misc': { 'quac.misc._fromcall': ('misc.html#_fromcall', 'quac/misc.py'),
                           'quac.misc._fromducks': ('misc.html#_fromducks', 'quac/misc.py'),
                           'quac.misc.asset_attrs': ('misc.html#asset_attrs', 'quac/misc.py'),
                           'quac.misc.asset_last': ('misc.html#asset_last', 'quac/misc.py'),
                           'quac.misc.asset_name': ('misc.html#asset_name', 'quac/misc.py'),
                           'quac.misc.asset_sub_pkg': ('misc.html#asset_sub_pkg', 'quac/misc.py'),
                           'quac.misc.find_asset_module': ('misc.html#find_asset_module', 'quac/misc.py'),
                           'quac.misc.find_last_spec': ('misc.html#find_last_spec', 'quac/misc.py'),
                           'quac.misc.find_spec_or_none': ('misc.html#find_spec_or_none', 'quac/misc.py'),
                           'quac.misc.get_option': ('misc.html#get_option', 'quac/misc.py'),
                           'quac.misc.getretann': ('misc.html#getretann', 'quac/misc.py'),
                           'quac.misc.hatchegg': ('misc.html#hatchegg', 'quac/misc.py'),
                           'quac.misc.insys': ('misc.html#insys', 'quac/misc.py'),
                           'quac.misc.load_asset': ('misc.html#load_asset', 'quac/misc.py'),
                           'quac.misc.parse_asset': ('misc.html#parse_asset', 'quac/misc.py'),
                           'quac.misc.prep_kwargs': ('misc.html#prep_kwargs', 'quac/misc.py'),
                           'quac.misc.prepare_ducktypes': ('misc.html#prepare_ducktypes', 'quac/misc.py'),
                           'quac.misc.prepare_isinstance_types': ('misc.html#prepare_isinstance_types', 'quac/misc.py'),
                           'quac.misc.prepare_types_for_instancecheck': ('misc.html#prepare_types_for_instancecheck', 'quac/misc.py'),
                           'quac.misc.putinrow': ('misc.html#putinrow', 'quac/misc.py'),
                           'quac.misc.try_ducked_attr': ('misc.html#try_ducked_attr', 'quac/misc.py'),
                           'quac.misc.try_loaded_attr': ('misc.html#try_loaded_attr', 'quac/misc.py'),
                           'quac.misc.tryattr': ('misc.html#tryattr', 'quac/misc.py'),
                           'quac.misc.unduck': ('misc.html#unduck', 'quac/misc.py')},
            'quac.mods': { 'quac.mods._PIL': ('mods.html#_pil', 'quac/mods.py'),
                           'quac.mods._anndata': ('mods.html#_anndata', 'quac/mods.py'),
                           'quac.mods._collectionsabc': ('mods.html#_collectionsabc', 'quac/mods.py'),
                           'quac.mods._cv2': ('mods.html#_cv2', 'quac/mods.py'),
                           'quac.mods._graphtools': ('mods.html#_graphtools', 'quac/mods.py'),
                           'quac.mods._importlib': ('mods.html#_importlib', 'quac/mods.py'),
                           'quac.mods._inspect': ('mods.html#_inspect', 'quac/mods.py'),
                           'quac.mods._itertools': ('mods.html#_itertools', 'quac/mods.py'),
                           'quac.mods._logging': ('mods.html#_logging', 'quac/mods.py'),
                           'quac.mods._math': ('mods.html#_math', 'quac/mods.py'),
                           'quac.mods._matplotlib': ('mods.html#_matplotlib', 'quac/mods.py'),
                           'quac.mods._mpl_artist': ('mods.html#_mpl_artist', 'quac/mods.py'),
                           'quac.mods._mpl_axes': ('mods.html#_mpl_axes', 'quac/mods.py'),
                           'quac.mods._mpl_base': ('mods.html#_mpl_base', 'quac/mods.py'),
                           'quac.mods._mpl_patches': ('mods.html#_mpl_patches', 'quac/mods.py'),
                           'quac.mods._numbers': ('mods.html#_numbers', 'quac/mods.py'),
                           'quac.mods._numpy': ('mods.html#_numpy', 'quac/mods.py'),
                           'quac.mods._os': ('mods.html#_os', 'quac/mods.py'),
                           'quac.mods._pandas': ('mods.html#_pandas', 'quac/mods.py'),
                           'quac.mods._pathlib': ('mods.html#_pathlib', 'quac/mods.py'),
                           'quac.mods._phate': ('mods.html#_phate', 'quac/mods.py'),
                           'quac.mods._pytorch_lightning': ('mods.html#_pytorch_lightning', 'quac/mods.py'),
                           'quac.mods._re': ('mods.html#_re', 'quac/mods.py'),
                           'quac.mods._rich': ('mods.html#_rich', 'quac/mods.py'),
                           'quac.mods._scipy': ('mods.html#_scipy', 'quac/mods.py'),
                           'quac.mods._seaborn': ('mods.html#_seaborn', 'quac/mods.py'),
                           'quac.mods._sklearn': ('mods.html#_sklearn', 'quac/mods.py'),
                           'quac.mods._string': ('mods.html#_string', 'quac/mods.py'),
                           'quac.mods._torch': ('mods.html#_torch', 'quac/mods.py'),
                           'quac.mods._torch_c': ('mods.html#_torch_c', 'quac/mods.py'),
                           'quac.mods._torchdyn': ('mods.html#_torchdyn', 'quac/mods.py'),
                           'quac.mods._torchsde': ('mods.html#_torchsde', 'quac/mods.py'),
                           'quac.mods._torchvision': ('mods.html#_torchvision', 'quac/mods.py'),
                           'quac.mods._tqdm': ('mods.html#_tqdm', 'quac/mods.py'),
                           'quac.mods._typer': ('mods.html#_typer', 'quac/mods.py'),
                           'quac.mods._types': ('mods.html#_types', 'quac/mods.py')},
            'quac.prot': { 'quac.prot.AnnDataProtocol': ('prot.html#anndataprotocol', 'quac/prot.py'),
                           'quac.prot.DataFrameProtocol': ('prot.html#dataframeprotocol', 'quac/prot.py'),
                           'quac.prot.DeviceProtocol': ('prot.html#deviceprotocol', 'quac/prot.py'),
                           'quac.prot.DeviceProtocol.__guard__': ('prot.html#deviceprotocol.__guard__', 'quac/prot.py'),
                           'quac.prot.DuckLikeProtocol': ('prot.html#ducklikeprotocol', 'quac/prot.py'),
                           'quac.prot.DuckModuleProtocol': ('prot.html#duckmoduleprotocol', 'quac/prot.py'),
                           'quac.prot.DuckProtocol': ('prot.html#duckprotocol', 'quac/prot.py'),
                           'quac.prot.DuckSpecProtocol': ('prot.html#duckspecprotocol', 'quac/prot.py'),
                           'quac.prot.GuardProtocol': ('prot.html#guardprotocol', 'quac/prot.py'),
                           'quac.prot.HasAllAttributeProtocol': ('prot.html#hasallattributeprotocol', 'quac/prot.py'),
                           'quac.prot.HasAllAttributeProtocol.__guard__': ('prot.html#hasallattributeprotocol.__guard__', 'quac/prot.py'),
                           'quac.prot.HasAnyAttributeProtocol': ('prot.html#hasanyattributeprotocol', 'quac/prot.py'),
                           'quac.prot.HasAnyAttributeProtocol.__guard__': ('prot.html#hasanyattributeprotocol.__guard__', 'quac/prot.py'),
                           'quac.prot.Hashable': ('prot.html#hashable', 'quac/prot.py'),
                           'quac.prot.Hashable.__hash__': ('prot.html#hashable.__hash__', 'quac/prot.py'),
                           'quac.prot.Hashable.__instancecheck__': ('prot.html#hashable.__instancecheck__', 'quac/prot.py'),
                           'quac.prot.NDArrayProtocol': ('prot.html#ndarrayprotocol', 'quac/prot.py'),
                           'quac.prot.NonStrBytesIterable': ('prot.html#nonstrbytesiterable', 'quac/prot.py'),
                           'quac.prot.NonStrBytesIterable.__instancecheck__': ( 'prot.html#nonstrbytesiterable.__instancecheck__',
                                                                                'quac/prot.py'),
                           'quac.prot.NonStrBytesIterable.__iter__': ('prot.html#nonstrbytesiterable.__iter__', 'quac/prot.py'),
                           'quac.prot.NotProtocol': ('prot.html#notprotocol', 'quac/prot.py'),
                           'quac.prot.NotProtocol.__instancecheck__': ('prot.html#notprotocol.__instancecheck__', 'quac/prot.py'),
                           'quac.prot.NotSpecial': ('prot.html#notspecial', 'quac/prot.py'),
                           'quac.prot.NotSpecial.__hash__': ('prot.html#notspecial.__hash__', 'quac/prot.py'),
                           'quac.prot.NotSpecial.__instancecheck__': ('prot.html#notspecial.__instancecheck__', 'quac/prot.py'),
                           'quac.prot.OptProtocol': ('prot.html#optprotocol', 'quac/prot.py'),
                           'quac.prot.OptProtocol.__instancecheck__': ('prot.html#optprotocol.__instancecheck__', 'quac/prot.py'),
                           'quac.prot.Origin': ('prot.html#origin', 'quac/prot.py'),
                           'quac.prot.Origin.__hash__': ('prot.html#origin.__hash__', 'quac/prot.py'),
                           'quac.prot.Origin.__instancecheck__': ('prot.html#origin.__instancecheck__', 'quac/prot.py'),
                           'quac.prot.ProtocolMeta': ('prot.html#protocolmeta', 'quac/prot.py'),
                           'quac.prot.ProtocolMeta.__instancecheck__': ('prot.html#protocolmeta.__instancecheck__', 'quac/prot.py'),
                           'quac.prot.Special': ('prot.html#special', 'quac/prot.py'),
                           'quac.prot.Special.__hash__': ('prot.html#special.__hash__', 'quac/prot.py'),
                           'quac.prot.Special.__instancecheck__': ('prot.html#special.__instancecheck__', 'quac/prot.py')},
            'quac.solo': { 'quac.solo.Empty': ('solo.html#empty', 'quac/solo.py'),
                           'quac.solo.EmptyModule': ('solo.html#emptymodule', 'quac/solo.py'),
                           'quac.solo.Module': ('solo.html#module', 'quac/solo.py'),
                           'quac.solo.Singleton': ('solo.html#singleton', 'quac/solo.py'),
                           'quac.solo.Singleton.__call__': ('solo.html#singleton.__call__', 'quac/solo.py'),
                           'quac.solo.Singleton.__eq__': ('solo.html#singleton.__eq__', 'quac/solo.py'),
                           'quac.solo.Singleton.__hash__': ('solo.html#singleton.__hash__', 'quac/solo.py'),
                           'quac.solo.Singleton.__instancecheck__': ('solo.html#singleton.__instancecheck__', 'quac/solo.py'),
                           'quac.solo.Singleton.__new__': ('solo.html#singleton.__new__', 'quac/solo.py'),
                           'quac.solo.Singleton.__repr__': ('solo.html#singleton.__repr__', 'quac/solo.py'),
                           'quac.solo.Singleton.__subclasscheck__': ('solo.html#singleton.__subclasscheck__', 'quac/solo.py')},
            'quac.spec': { 'quac.spec.DuckSpec': ('spec.html#duckspec', 'quac/spec.py'),
                           'quac.spec.DuckSpec.__init__': ('spec.html#duckspec.__init__', 'quac/spec.py'),
                           'quac.spec.DuckSpec.__load__': ('spec.html#duckspec.__load__', 'quac/spec.py'),
                           'quac.spec.DuckSpec.__new__': ('spec.html#duckspec.__new__', 'quac/spec.py'),
                           'quac.spec.DuckSpec.__prep__': ('spec.html#duckspec.__prep__', 'quac/spec.py'),
                           'quac.spec.DuckSpec.__repr__': ('spec.html#duckspec.__repr__', 'quac/spec.py'),
                           'quac.spec.DuckSpec.duck': ('spec.html#duckspec.duck', 'quac/spec.py'),
                           'quac.spec.DuckSpec.load': ('spec.html#duckspec.load', 'quac/spec.py')},
            'quac.type': {}}}
