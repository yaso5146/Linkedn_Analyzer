# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/02_comp.ipynb.

# %% auto 0
__all__ = ['anyguard', 'allguard', 'islistordict']

# %% ../nbs/02_comp.ipynb 4
from typing import TypeGuard
from typing import Union

# %% ../nbs/02_comp.ipynb 5
from .atyp import G, GuardFunc
from .core import islist, isdict

# %% ../nbs/02_comp.ipynb 7
def anyguard(x, *guards: GuardFunc) -> TypeGuard[G]:
    '''Check if `x` is any of the `guards`'''
    return any(guard(x) for guard in guards)

def allguard(x, *guards: GuardFunc) -> TypeGuard[G]:
    '''Check if `x` is all of the `guards`'''
    return all(guard(x) for guard in guards)

# %% ../nbs/02_comp.ipynb 8
def islistordict(x) -> TypeGuard[Union[list, dict]]:
    '''
    Check if `x` is a `list` or `dict`.

    Parameters
    ----------
    x : Any
        The variable to check.

    Returns
    -------
    TypeGuard[Union[list, dict]
        True if `x` is a `list` or `dict`, False otherwise.
    '''
    return anyguard(x, islist, isdict)
