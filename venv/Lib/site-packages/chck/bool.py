# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/14_bool.ipynb.

# %% auto 0
__all__ = ['is01', 'isbool01', 'isbooly', 'isbooltype', 'isbtype', 'isboolcall', 'isbcall']

# %% ../nbs/14_bool.ipynb 4
from typing import TypeGuard
from typing import Type, Callable, Literal, Union

# %% ../nbs/14_bool.ipynb 5
from quac import bool01, npbool
from .core import isbool, iscall

# %% ../nbs/14_bool.ipynb 7
def is01(x) -> TypeGuard[Union[Literal[0], Literal[1]]]: 
    '''Check if `x` is either `0` or `1`.'''
    return x in [0, 1]

def isbool01(x) -> TypeGuard[bool01]:
    '''Check if `x` is one of `bool`, `np.bool_`, `0`, or `1`.
    
    See Also
    --------
    isbooly : Alias for `isbool01`.
    '''
    return isbool(x) or is01(x) or isinstance(x, npbool)

def isbooly(x) -> TypeGuard[bool01]:
    '''Check if `x` is one of `bool`, `np.bool_`, `0`, or `1`.
    
    See Also
    --------
    isbool01 : Alias for `isbooly`.
    '''
    return isbool01(x)

# %% ../nbs/14_bool.ipynb 8
def isbooltype(x) -> TypeGuard[Type[bool]]:
    '''Check if `x` is the `bool` type.
    
    See Also
    --------
    isbtype : Alias for `isbooltype`.
    '''
    return x == bool

def isbtype(x) -> TypeGuard[Type[bool]]:
    '''Check if `x` is the `bool` type.
    
    See Also
    --------
    isbooltype : Alias for `isbtype`.
    '''
    return isbooltype(x)

# %% ../nbs/14_bool.ipynb 9
def isboolcall(x) -> TypeGuard[Union[bool01, Callable]]:
    '''Check if `x` is one of `bool`, `np.bool_`, `0`, `1`, or `Callable`.
    
    See Also
    --------
    isbcall : Alias for `isboolcall`.
    '''
    return isbool(x) or iscall(x) or is01(x) or isinstance(x, npbool)

def isbcall(x)  -> TypeGuard[Union[bool01, Callable]]:
    '''Check if `x` is one of `bool`, `np.bool_`, `0`, `1`, or `Callable`.
    
    See Also
    --------
    isboolcall : Alias for `isbcall`.
    '''
    return isboolcall(x)
