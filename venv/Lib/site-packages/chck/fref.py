# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/05_fref.ipynb.

# %% auto 0
__all__ = ['isforwardref', 'isfref', 'dereference']

# %% ../nbs/05_fref.ipynb 4
from typing import TypeGuard
from typing import ForwardRef

# %% ../nbs/05_fref.ipynb 5
from .core import isnone
from dref import isforwardref as frefq, dereference as dref

# %% ../nbs/05_fref.ipynb 7
def isforwardref(x) -> TypeGuard[ForwardRef]:
    '''Check if `x` is a `ForwardRef`
    
    See Also
    --------
    dref.isforwardref : Original `isforwardref`.
    isfref : Alias for `isforwardref`.
    '''
    return frefq(x)

def isfref(x) -> TypeGuard[ForwardRef]:
    '''Check if `x` is a `ForwardRef`
    
    See Also
    --------
    isforwardref : Alias for `isfref`.
    '''
    return isforwardref(x)

# %% ../nbs/05_fref.ipynb 8
def dereference(
    ref: ForwardRef | str,
    is_argument: bool = False,
    module: str = None,
    *,
    is_class: bool = False,
    globalsns: dict = None, 
    localsns: dict = None, 
    recursive_guard: set = None
) -> type:
    '''Dereference a `ForwardRef` object.
    
    See Also
    --------
    dref.dereference : Alias for `dereference`.
    dref.dref : Alias for `dereference`.
    '''
    return dref(
        ref = ref,
        is_argument = is_argument,
        module = module,
        is_class = is_class,
        globalsns = globals() if isnone(globalsns) else globalsns,
        localsns = locals()  if isnone(localsns)  else localsns,
        recursive_guard = recursive_guard
    )
